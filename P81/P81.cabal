cabal-version:      2.4
name:               P81
version:            0.1.0.0

-- A short (one-line) description of the package.
-- synopsis:

-- A longer description of the package.
-- description:

-- A URL where users can report bugs.
-- bug-reports:

-- The license under which the package is released.
-- license:
author:             Thomas Li
maintainer:         thomas5267@gmail.com

-- A copyright notice.
-- copyright:
-- category:
extra-source-files: CHANGELOG.md

common shared-properties
    default-language: Haskell2010
    hs-source-dirs: app
    build-depends:
        base ^>=4.14.3.0,
        split ^>=0.2.3.4,
        array ^>=0.5.4.0,
        PSQueue ^>=1.1.0.1,
        containers ^>=0.6.5.1
    ghc-options:
    -- For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
    -- This list taken from https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3
    -- Enable all warnings with -Weverything, then disable the ones we don’t care about
    -- Added -Wno-implicit-prelude, -Wno-missing-safe-haskell-mode, -Wno-missing-export-lists,
    -- -Wno-prepositive-qualified-module

      -Weverything

    -- missing-exported-signatures turns off the more strict -Wmissing-signatures.
    -- See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
      -Wno-missing-exported-signatures

    -- Requires explicit imports of _every_ function (e.g. ‘$’); too strict
      -Wno-missing-import-lists

    -- When GHC can’t specialize a polymorphic function.
    -- No big deal and requires fixing underlying libraries to solve.
      -Wno-missed-specialisations

    -- See missed-specialisations
      -Wno-all-missed-specialisations

    -- Don’t use Safe Haskell warnings
      -Wno-unsafe

    -- Don’t use Safe Haskell warnings
      -Wno-safe

    -- Warning for polymorphic local bindings; nothing wrong with those.
      -Wno-missing-local-signatures

    -- Don’t warn if the monomorphism restriction is used
    -- -Wno-monomorphism-restriction

    -- Use implicit prelude, so don't warn.
      -Wno-implicit-prelude

    -- Don’t use Safe Haskell warnings
      -Wno-missing-safe-haskell-mode

    -- Mostly one off program, so don't warn on lack of explicit export
      -Wno-missing-export-lists

    -- This is just stupid
      -Wno-prepositive-qualified-module

    default-extensions:
      TypeApplications

common shared-properties-exe
    import: shared-properties
    other-modules: Common
    ghc-options:
      -threaded
      -rtsopts
      "-with-rtsopts=-N"


library common
    import: shared-properties


executable P81
    import: shared-properties-exe
    main-is: P81.hs

executable P81-profiling
    import: shared-properties-exe
    main-is: P81.hs
    ghc-options:
      -fprof-auto
      "-with-rtsopts=-N -p -s -i0.01"


executable P82
    import: shared-properties-exe
    main-is: P82.hs

executable P82-profiling
    import: shared-properties-exe
    main-is: P82.hs
    ghc-options:
      -fprof-auto
      -rtsopts
      "-with-rtsopts=-N -p -s -i0.01"


executable P83
    import: shared-properties-exe
    main-is: P83.hs

executable P83-profiling
    import: shared-properties-exe
    main-is: P83.hs
    ghc-options:
      -fprof-auto
      -rtsopts
      "-with-rtsopts=-N -p -s -i0.01"

